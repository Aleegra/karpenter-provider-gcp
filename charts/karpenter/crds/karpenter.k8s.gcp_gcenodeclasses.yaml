---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: gcenodeclasses.karpenter.k8s.gcp
spec:
  group: karpenter.k8s.gcp
  names:
    categories:
    - karpenter
    kind: GCENodeClass
    listKind: GCENodeClassList
    plural: gcenodeclasses
    shortNames:
    - gcenc
    - gcencs
    singular: gcenodeclass
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GCENodeClass is the Schema for the GCENodeClass API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              GCENodeClassSpec is the top level specification for the GCP Karpenter Provider.
              This will contain the configuration necessary to launch instances in GCP.
            properties:
              kubeletConfiguration:
                description: |-
                  KubeletConfiguration defines args to be used when configuring kubelet on provisioned nodes.
                  They are a vswitch of the upstream types, recognizing not all options may be supported.
                  Wherever possible, the types and names should reflect the upstream kubelet types.
                properties:
                  clusterDNS:
                    description: |-
                      clusterDNS is a list of IP addresses for the cluster DNS server.
                      Note that not all providers may use all addresses.
                    items:
                      type: string
                    type: array
                  cpuCFSQuota:
                    description: CPUCFSQuota enables CPU CFS quota enforcement for
                      containers that specify CPU limits.
                    type: boolean
                  evictionHard:
                    additionalProperties:
                      type: string
                    description: EvictionHard is the map of signal names to quantities
                      that define hard eviction thresholds
                    type: object
                    x-kubernetes-validations:
                    - message: valid keys for evictionHard are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']
                      rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])
                  evictionMaxPodGracePeriod:
                    description: |-
                      EvictionMaxPodGracePeriod is the maximum allowed grace period (in seconds) to use when terminating pods in
                      response to soft eviction thresholds being met.
                    format: int32
                    type: integer
                  evictionSoft:
                    additionalProperties:
                      type: string
                    description: EvictionSoft is the map of signal names to quantities
                      that define soft eviction thresholds
                    type: object
                    x-kubernetes-validations:
                    - message: valid keys for evictionSoft are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']
                      rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])
                  evictionSoftGracePeriod:
                    additionalProperties:
                      type: string
                    description: EvictionSoftGracePeriod is the map of signal names
                      to quantities that define grace periods for each eviction signal
                    type: object
                    x-kubernetes-validations:
                    - message: valid keys for evictionSoftGracePeriod are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']
                      rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])
                  imageGCHighThresholdPercent:
                    description: |-
                      ImageGCHighThresholdPercent is the percent of disk usage after which image
                      garbage collection is always run. The percent is calculated by dividing this
                      field value by 100, so this field must be between 0 and 100, inclusive.
                      When specified, the value must be greater than ImageGCLowThresholdPercent.
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                  imageGCLowThresholdPercent:
                    description: |-
                      ImageGCLowThresholdPercent is the percent of disk usage before which image
                      garbage collection is never run. Lowest disk usage to garbage collect to.
                      The percent is calculated by dividing this field value by 100,
                      so the field value must be between 0 and 100, inclusive.
                      When specified, the value must be less than imageGCHighThresholdPercent
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                  kubeReserved:
                    additionalProperties:
                      type: string
                    description: KubeReserved contains resources reserved for Kubernetes
                      system components.
                    type: object
                    x-kubernetes-validations:
                    - message: valid keys for kubeReserved are ['cpu','memory','ephemeral-storage','pid']
                      rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage'
                        || x=='pid')
                    - message: kubeReserved value cannot be a negative resource quantity
                      rule: self.all(x, !self[x].startsWith('-'))
                  maxPods:
                    description: |-
                      MaxPods is an override for the maximum number of pods that can run on
                      a worker node instance.
                    format: int32
                    minimum: 0
                    type: integer
                  podsPerCore:
                    description: |-
                      PodsPerCore is an override for the number of pods that can run on a worker node
                      instance based on the number of cpu cores. This value cannot exceed MaxPods, so, if
                      MaxPods is a lower value, that value will be used.
                    format: int32
                    minimum: 0
                    type: integer
                  systemReserved:
                    additionalProperties:
                      type: string
                    description: SystemReserved contains resources reserved for OS
                      system daemons and kernel memory.
                    type: object
                    x-kubernetes-validations:
                    - message: valid keys for systemReserved are ['cpu','memory','ephemeral-storage','pid']
                      rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage'
                        || x=='pid')
                    - message: systemReserved value cannot be a negative resource
                        quantity
                      rule: self.all(x, !self[x].startsWith('-'))
                type: object
                x-kubernetes-validations:
                - message: imageGCHighThresholdPercent must be greater than imageGCLowThresholdPercent
                  rule: 'has(self.imageGCHighThresholdPercent) && has(self.imageGCLowThresholdPercent)
                    ?  self.imageGCHighThresholdPercent > self.imageGCLowThresholdPercent  :
                    true'
                - message: evictionSoft OwnerKey does not have a matching evictionSoftGracePeriod
                  rule: has(self.evictionSoft) ? self.evictionSoft.all(e, (e in self.evictionSoftGracePeriod)):true
                - message: evictionSoftGracePeriod OwnerKey does not have a matching
                    evictionSoft
                  rule: has(self.evictionSoftGracePeriod) ? self.evictionSoftGracePeriod.all(e,
                    (e in self.evictionSoft)):true
              resourceGroupId:
                description: ResourceGroupID is the resource group id in GCE
                pattern: rg-[0-9a-z]+
                type: string
              securityGroupSelectorTerms:
                description: SecurityGroupSelectorTerms is a list of or security group
                  selector terms. The terms are ORed.
                items:
                  description: |-
                    SecurityGroupSelectorTerm defines selection logic for a security group used by Karpenter to launch nodes.
                    If multiple fields are used for selection, the requirements are ANDed.
                  properties:
                    id:
                      description: ID is the security group id in GCE
                      pattern: sg-[0-9a-z]+
                      type: string
                    name:
                      description: |-
                        Name is the security group name in GCE.
                        This value is the name field, which is different from the name tag.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: |-
                        Tags is a map of key/value tags used to select vSwitches
                        Specifying '*' for a value selects all values for a given tag key.
                      maxProperties: 20
                      type: object
                      x-kubernetes-validations:
                      - message: empty tag keys aren't supported
                        rule: self.all(k, k != '')
                  type: object
                maxItems: 30
                type: array
                x-kubernetes-validations:
                - message: securityGroupSelectorTerms cannot be empty
                  rule: self.size() != 0
                - message: expected at least one, got none, ['tags', 'id', 'name']
                  rule: self.all(x, has(x.tags) || has(x.id) || has(x.name))
                - message: '''id'' is mutually exclusive, cannot be set with a combination
                    of other fields in securityGroupSelectorTerms'
                  rule: '!self.all(x, has(x.id) && (has(x.tags) || has(x.name)))'
                - message: '''name'' is mutually exclusive, cannot be set with a combination
                    of other fields in securityGroupSelectorTerms'
                  rule: '!self.all(x, has(x.name) && (has(x.tags) || has(x.id)))'
              tags:
                additionalProperties:
                  type: string
                description: Tags to be applied on gce resources like instances and
                  launch templates.
                type: object
                x-kubernetes-validations:
                - message: empty tag keys aren't supported
                  rule: self.all(k, k != '')
                - message: tag contains a restricted tag matching gce:gce-cluster-name
                  rule: self.all(k, k !='gce:gce-cluster-name')
                - message: tag contains a restricted tag matching kubernetes.io/cluster/
                  rule: self.all(k, !k.startsWith('kubernetes.io/cluster') )
                - message: tag contains a restricted tag matching karpenter.sh/nodepool
                  rule: self.all(k, k != 'karpenter.sh/nodepool')
                - message: tag contains a restricted tag matching karpenter.sh/nodeclaim
                  rule: self.all(k, k !='karpenter.sh/nodeclaim')
                - message: tag contains a restricted tag matching karpenter.k8s.gcp/gcenodeclass
                  rule: self.all(k, k !='karpenter.k8s.gcp/gcenodeclass')
            required:
            - securityGroupSelectorTerms
            type: object
          status:
            description: GCENodeClassStatus contains the resolved state of the GCENodeClass
            properties:
              conditions:
                description: Conditions contains signals for health and readiness
                items:
                  description: Condition aliases the upstream type and adds additional
                    helper methods
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              securityGroups:
                description: |-
                  SecurityGroups contains the current Security Groups values that are available to the
                  cluster under the SecurityGroups selectors.
                items:
                  description: SecurityGroup contains resolved SecurityGroup selector
                    values utilized for node launch
                  properties:
                    id:
                      description: ID of the security group
                      type: string
                    name:
                      description: Name of the security group
                      type: string
                  required:
                  - id
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
